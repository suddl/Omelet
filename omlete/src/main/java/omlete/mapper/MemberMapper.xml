<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="omlete.mapper.MemberMapper">
	<insert id="insertMember">
		<selectKey resultType="int" keyProperty="memberNo" order="BEFORE" >
		    select member_seq.nextval from dual
		</selectKey>
		insert into member values(#{memberNo}, #{memberId},#{memberPasswd}, #{memberName},#{memberPhone}, #{memberEmail},1, 0, 1, 100,  null, 0, #{memberNickname})
	</insert>
	
	<select id="selectMemberId" resultType="string">
		select member_id from member where member_name=#{memberName} and member_email=#{memberEmail} 
	</select>
	 
	<select id="selectMember" resultType="Member">
		select member_no, member_id, member_passwd, member_name, member_phone, member_email, member_level, member_badge, member_status,
		member_point, member_favorite1, member_report, member_nickname from member where member_id=#{memberId}
	</select>
	
	<select id="selectMemberNickname" resultType="Member">
		select member_no, member_id, member_passwd, member_name, member_phone, member_email, member_level, member_badge, member_status,
		member_point, member_favorite1, member_report, member_nickname from member where member_nickname=#{memberNickname}
	</select>
	
	<select id="selectMemberEmail" resultType="Member">
		select member_no, member_id, member_passwd, member_name, member_phone, member_email, member_level, member_badge, member_status,
		member_point, member_favorite1, member_report, member_nickname from member where member_nickname=#{memberEmail}
	</select>
	
	<!-- ================================================================================================================================ -->
	<!-- 마이 페이지 -->
	<select id="selectMemberNo" resultType="Member">
		select member_no, member_id, member_passwd, member_name, member_phone, member_email, member_level, member_badge, member_status,
		member_point, member_favorite1, member_report, member_nickname from member where member_no=#{memberNo}
	</select>
	
	<!-- 마이페이지 - 회원 정보 수정 -->
	<update id="updateMemberInfo">
		update member 
		<set>
			<if test="memberId!=null and memberId!=''">
				member_id=#{memberId},
			</if>		
			<if test="memberPasswd!=null and memberPasswd!=''">
				member_passwd=#{memberPasswd},
			</if>
			<if test="memberName!=null and memberName!=''">
				member_name=#{memberName},
			</if>
			<if test="memberPhone!=null and memberPhone!=''">
				member_phone=#{memberPhone},
			</if>		
			<if test="memberEmail!=null and memberEmail!=''">
				member_email=#{memberEmail},
			</if>		
			<if test="memberNickname!=null and memberNickname!=''">
				member_Nickname=#{memberNickname}
			</if>
		</set>
		where member_no=#{memberNo}
	</update>
	
	<!-- 회원 탈퇴 -->
	<update id="updateMemberResign">
	    update member 
	    <set>
	        member_status = 0
	    </set>
	    where member_no = #{memberNo}
	</update>
	
	<!-- 인생 영화 변경 -->
	<update id="updateMemberContents">
	    UPDATE member set member_favorite1 = #{memberFavorite1} WHERE member_no = #{memberNo}
	</update>
	
	<update id="updateMemberPoint">
		update member set member_point=#{memberPoint} where member_no=#{memberNo}
	</update>
	
	<!-- 관리자 페이지 -->
	<select id="selectMemberList" resultType="Member">
		select member_no, member_id, member_name, member_phone, member_email, member_level, member_status, member_point, member_report, member_nickname
		from member order by member_no
	</select>
	
	<select id="selectReportedMemberList" resultType="Member">
		select member_no, member_id, member_name, member_phone, member_email, member_level, member_status, member_point, member_report, member_nickname
		from member where member_report>=20 order by member_no
	</select>
	
	<update id="updateMemberStatus">
		update member
		<set>
			<if test="memberStatus!=null and memberStatus!=''">
				member_status=#{memberStatus}
			</if>
		</set>
	</update>
</mapper>